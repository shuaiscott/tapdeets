{"version":3,"sources":["Constants.js","components/List.js","components/withListLoading.js","useQueryParam.js","App.js","reportWebVitals.js","index.js"],"names":["config","url","API_URL","profileUrlsMap","List","props","deet","id","src","image_url","alt","name","width","height","className","phone","email","href","linkedin","instagram","facebook","pinterest","WithListLoading","Component","isLoading","style","textAlign","fontSize","getQueryStringVal","key","window","URLSearchParams","location","search","get","useQueryParam","defaultVal","useState","query","setQuery","newVal","trim","set","delete","protocol","pathname","host","newUrl","toString","history","pushState","App","deet_id","ListLoading","withListLoading","loading","appState","setAppState","useEffect","apiUrl","fetch","then","res","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ce809c9.chunk.js","sourcesContent":["// Prod/Dev env variables\nconst prod = {\n url: {\n  API_URL: 'https://api.deets.tapme.org/production/deets/'\n }\n};\nconst dev = {\n url: {\n  API_URL: 'http://localhost:8010/proxy/production/deets/'\n }\n};\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;\n\n// App Profile URLs\nexport const profileUrlsMap = {\n  linkedin: 'https://linkedin.com/in/',\n  facebook: 'https://facebook.com/',\n  instagram: 'https://instagram.com/',\n  pinterest: 'https://pinterest.com/',\n  venmo: 'https://venmo.com/'\n};\n\n","import React from 'react';\nimport { profileUrlsMap } from '../Constants'\n\nconst List = (props) => {\n  const { deet } = props;\n  if (!deet || !deet.id) return <h2>Deets not found ðŸ˜­</h2>;\n  return (\n          <div id='{deet.id'>\n            <img src={deet.image_url} alt={deet.name} width=\"100%\" height=\"100%\" />\n            <h2 className='name'>{deet.name}</h2>\n            <h4 className='id'>{deet.phone}</h4>\n            <h4 className='id'>{deet.email}</h4>\n            <div className=\"row\">\n              <div className=\"column\"><a href={profileUrlsMap['linkedin'] + deet.linkedin}><img src=\"app-icons/linkedin.svg\" alt=\"linkedin\" width=\"60%\" /></a></div>\n              <div className=\"column\"><a href={profileUrlsMap['instagram'] + deet.instagram}><img src=\"app-icons/instagram.svg\" alt=\"instagram\" width=\"60%\" /></a></div>\n            </div>\n            <div className=\"row\">\n              <div className=\"column\"><a href={profileUrlsMap['facebook'] + deet.facebook}><img src=\"app-icons/facebook.svg\" alt=\"facebook\" width=\"60%\" /></a></div>\n              <div className=\"column\"><a href={profileUrlsMap['pinterest'] + deet.pinterest}><img src=\"app-icons/pinterest.svg\" alt=\"pinterest\" width=\"60%\" /></a></div>\n            </div>\n          </div>\n  );\n};\nexport default List;","import React from 'react';\n\nfunction WithListLoading(Component) {\n  return function WithLoadingComponent({ isLoading, ...props }) {\n    if (!isLoading) return <Component {...props} />;\n    return (\n      <p style={{ textAlign: 'center', fontSize: '30px' }}>\n        Hold on, fetching data may take some time :)\n      </p>\n    );\n  };\n}\nexport default WithListLoading;","import { useState } from 'react';\n\nconst getQuery = () => {\n  if (typeof window !== 'undefined') {\n    return new URLSearchParams(window.location.search);\n  }\n  return new URLSearchParams();\n};\n\nconst getQueryStringVal = (key: string): string | null => {\n  return getQuery().get(key);\n};\n\nconst useQueryParam = (\n  key: string,\n  defaultVal: string\n): [string, (val: string) => void] => {\n  const [query, setQuery] = useState(getQueryStringVal(key) || defaultVal);\n\n  const updateUrl = (newVal: string) => {\n    setQuery(newVal);\n\n    if (newVal.trim() !== '') {\n      query.set(key, newVal);\n    } else {\n      query.delete(key);\n    }\n\n    // This check is necessary if using the hook with Gatsby\n    if (typeof window !== 'undefined') {\n      const { protocol, pathname, host } = window.location;\n      const newUrl = `${protocol}//${host}${pathname}?${query.toString()}`;\n      window.history.pushState({}, '', newUrl);\n    }\n  };\n\n  return [query, updateUrl];\n};\n\nexport default useQueryParam;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport List from './components/List';\nimport withListLoading from './components/withListLoading';\nimport useQueryParam from './useQueryParam';\nimport { config } from './Constants'\nfunction App() {\n  const [deet_id] = useQueryParam('id', '');\n  const ListLoading = withListLoading(List);\n  const [appState, setAppState] = useState({\n    loading: false,\n    deet: null\n  });\n\n  useEffect(() => {\n    setAppState({ loading: true });\n    const apiUrl = config.url.API_URL + deet_id;\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((deet) => {\n        setAppState({ loading: false, deet: deet });\n      });\n  }, [setAppState, deet_id]);\n  return (\n    <div className='App'>\n      <div className='repo-container'>\n        <ListLoading isLoading={appState.loading} deet={appState.deet} />\n      </div>\n      <footer>\n        <div className='footer'>\n          \n        </div>\n      </footer>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}