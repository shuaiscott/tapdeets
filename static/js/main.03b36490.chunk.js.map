{"version":3,"sources":["components/List.js","components/withListLoading.js","useQueryParam.js","App.js","reportWebVitals.js","index.js"],"names":["urlsMap","List","props","deet","id","src","image_url","alt","name","width","height","className","phone","email","href","linkedin","instagram","facebook","pinterest","WithListLoading","Component","isLoading","style","textAlign","fontSize","getQuery","window","URLSearchParams","location","search","useQueryParam","key","defaultVal","useState","get","getQueryStringVal","query","setQuery","newVal","trim","set","delete","protocol","pathname","host","newUrl","toString","history","pushState","App","deet_id","ListLoading","withListLoading","loading","appState","setAppState","useEffect","fetch","then","res","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03b36490.chunk.js","sourcesContent":["import React from 'react';\n\nconst urlsMap = {\n  linkedin: 'https://linkedin.com/in/',\n  facebook: 'https://facebook.com/',\n  instagram: 'https://instagram.com/',\n  pinterest: 'https://pinterest.com/',\n  venmo: 'https://venmo.com/',\n};\n\nconst List = (props) => {\n  const { deet } = props;\n  if (!deet || !deet.id) return <h2>Deets not found ðŸ˜­</h2>;\n  return (\n          <div id='{deet.id'>\n            <img src={deet.image_url} alt={deet.name} width=\"100%\" height=\"100%\" />\n            <h2 className='name'>{deet.name}</h2>\n            <h4 className='id'>{deet.phone}</h4>\n            <h4 className='id'>{deet.email}</h4>\n            <div className=\"row\">\n              <div className=\"column\"><a href={urlsMap['linkedin'] + deet.linkedin}><img src=\"app-icons/linkedin.svg\" alt=\"linkedin\" width=\"30%\" /></a></div>\n              <div className=\"column\"><a href={urlsMap['instagram'] + deet.instagram}><img src=\"app-icons/instagram.svg\" alt=\"instagram\" width=\"30%\" /></a></div>\n            </div>\n            <div className=\"row\">\n              <div className=\"column\"><a href={urlsMap['facebook'] + deet.facebook}><img src=\"app-icons/facebook.svg\" alt=\"facebook\" width=\"30%\" /></a></div>\n              <div className=\"column\"><a href={urlsMap['pinterest'] + deet.pinterest}><img src=\"app-icons/pinterest.svg\" alt=\"pinterest\" width=\"30%\" /></a></div>\n            </div>\n          </div>\n  );\n};\nexport default List;","import React from 'react';\n\nfunction WithListLoading(Component) {\n  return function WithLoadingComponent({ isLoading, ...props }) {\n    if (!isLoading) return <Component {...props} />;\n    return (\n      <p style={{ textAlign: 'center', fontSize: '30px' }}>\n        Hold on, fetching data may take some time :)\n      </p>\n    );\n  };\n}\nexport default WithListLoading;","import { useState } from 'react';\n\nconst getQuery = () => {\n  if (typeof window !== 'undefined') {\n    return new URLSearchParams(window.location.search);\n  }\n  return new URLSearchParams();\n};\n\nconst getQueryStringVal = (key: string): string | null => {\n  return getQuery().get(key);\n};\n\nconst useQueryParam = (\n  key: string,\n  defaultVal: string\n): [string, (val: string) => void] => {\n  const [query, setQuery] = useState(getQueryStringVal(key) || defaultVal);\n\n  const updateUrl = (newVal: string) => {\n    setQuery(newVal);\n\n    const query = getQuery();\n\n    if (newVal.trim() !== '') {\n      query.set(key, newVal);\n    } else {\n      query.delete(key);\n    }\n\n    // This check is necessary if using the hook with Gatsby\n    if (typeof window !== 'undefined') {\n      const { protocol, pathname, host } = window.location;\n      const newUrl = `${protocol}//${host}${pathname}?${query.toString()}`;\n      window.history.pushState({}, '', newUrl);\n    }\n  };\n\n  return [query, updateUrl];\n};\n\nexport default useQueryParam;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport List from './components/List';\nimport withListLoading from './components/withListLoading';\nimport useQueryParam from './useQueryParam';\nfunction App() {\n  const [deet_id] = useQueryParam('id', '');\n  const ListLoading = withListLoading(List);\n  const [appState, setAppState] = useState({\n    loading: false,\n    deet: null\n  });\n\n  useEffect(() => {\n    setAppState({ loading: true });\n    const apiUrl = \"https://api.deets.tapme.org/deets/\"+ deet_id;\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((deet) => {\n        setAppState({ loading: false, deet: deet });\n      });\n  }, [setAppState, deet_id]);\n  return (\n    <div className='App'>\n      <div className='repo-container'>\n        <ListLoading isLoading={appState.loading} deet={appState.deet} />\n      </div>\n      <footer>\n        <div className='footer'>\n          \n        </div>\n      </footer>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}